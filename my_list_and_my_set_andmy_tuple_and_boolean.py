# -*- coding: utf-8 -*-
"""my_list and my_set andmy_tuple and boolean.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b7_SZCnb3T_tafMEg-r-XFKW4Th-TN-7
"""

my_list = [1,1,1,2,3,5,8,9,9,11,15] #The my_list statement iterates through the members of the list, re-reading each member with the same numbers and repetitions.

my_list

my_set = {1,1,1,2,3,5,8,9,9,11,15}

my_set   #"When you print a set, Python only displays one set of each member, even if there are duplicates.""This is because sets are collections of unique elements, and therefore only one instance of each element is included."

my_list[0]

my_list[3]

my_tuple = (1, 1, 1, 2, 3, 5, 8, 9, 9, 11, 15)  #Tuples are faster than sets because they allow for faster element lookup.Sets are more efficient for checking the existence of a particular element in the collection.

my_tuple

my_tuple[0]

my_tuple[2]

12>20    #Comparison operators: Operators such as == (equal to), != (not equal to), < (less than), > (greater than), <= (less than or equal to), and >= (greater than or equal to) are used to compare boolean values.

14 == 14

30!= 40   #"30 does not equal 50."